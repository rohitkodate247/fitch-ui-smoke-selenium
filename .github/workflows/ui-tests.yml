name: UI Tests (Selenium)

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Pin Chrome so CDP == 139 (matches selenium-devtools-v139 in pom.xml) 24
      - name: Set up Chrome 139
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: '139'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Run tests (headless Chrome)
        env:
          BASE_URL: https://www.fitchratings.com
        run: mvn -B -q test

      # Print test summaries directly in the Actions log
      - name: Show Surefire summary
        if: always()
        run: |
          echo "==== Surefire TXT summaries ===="
          if [ -d target/surefire-reports ]; then
            find target/surefire-reports -maxdepth 1 -name "*.txt" -print -exec sed -n '1,200p' {} \;
            echo "==== JUnit XML files ===="
            ls -1 target/surefire-reports/*.xml || true
          else
            echo "No surefire-reports directory found."
          fi

      # Compute Passed / Failed / Errors / Skipped / Total and print + add to Job Summary
      - name: Compute test summary
        if: always()
        run: |
          set -e
          if [ ! -d target/surefire-reports ]; then
            echo "No surefire-reports directory found."
            exit 0
          fi

          RUN=0; FAIL=0; ERR=0; SKIP=0
          # Sum across all test set TXT files (handles multiple classes)
          for f in target/surefire-reports/*.txt; do
            LINE=$(grep -E "Tests run:" "$f" | tail -n1 || true)
            [ -z "$LINE" ] && continue
            r=$(echo "$LINE" | grep -oE 'Tests run: *[0-9]+' | grep -oE '[0-9]+')
            f1=$(echo "$LINE" | grep -oE 'Failures: *[0-9]+' | grep -oE '[0-9]+')
            e1=$(echo "$LINE" | grep -oE 'Errors: *[0-9]+' | grep -oE '[0-9]+')
            s1=$(echo "$LINE" | grep -oE 'Skipped: *[0-9]+' | grep -oE '[0-9]+')
            RUN=$((RUN + r))
            FAIL=$((FAIL + f1))
            ERR=$((ERR + e1))
            SKIP=$((SKIP + s1))
          done
          PASSED=$((RUN - FAIL - ERR - SKIP))

          echo "==== Parsed Test Totals ===="
          echo "Passed:  ${PASSED}"
          echo "Failures:${FAIL}"
          echo "Errors:  ${ERR}"
          echo "Skipped: ${SKIP}"
          echo "Total:   ${RUN}"

          {
            echo "### UI Test Summary"
            echo ""
            echo "- ✅ Passed: **${PASSED}**"
            echo "- ❌ Failures: **${FAIL}**"
            echo "- ⚠️ Errors: **${ERR}**"
            echo "- ⏭️ Skipped: **${SKIP}**"
            echo "- 📊 Total: **${RUN}**"
          } >> "$GITHUB_STEP_SUMMARY"

      # Upload full reports as an artifact
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports
          if-no-files-found: warn
